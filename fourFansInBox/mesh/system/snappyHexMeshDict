/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2106                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

castellatedMesh true;
snap            true;
addLayers       false;

geometry
{
    cylinder1S.stl{ type triSurfaceMesh; name cylinder1;}
    cylinder2S.stl{ type triSurfaceMesh; name cylinder2;}
    inletS.stl{ type triSurfaceMesh; name inlet;}
    outletS.stl{ type triSurfaceMesh; name outlet;}
    wallsS.stl{ type triSurfaceMesh; name walls;}
    twoFansY12.stl{ type triSurfaceMesh; name fans;}
}

castellatedMeshControls
{
    maxLocalCells 100000;
    maxGlobalCells 8000000;
    minRefinementCells 0;
    maxLoadUnbalance 0.10;
    nCellsBetweenLevels 2;

    features
    (
        { file "cylinder1S.eMesh"; level 3;} // Note: better: level 3
        { file "cylinder2S.eMesh"; level 3;} // Note: better: level 3
        { file "twoFansY12.eMesh"; level 4;} // Note: better: level 3
        { file "inletS.eMesh"; level 0;}
        { file "outletS.eMesh"; level 0;}
        { file "wallsS.eMesh"; level 0;}
    );

    refinementSurfaces
    {
        cylinder1
        {
            level (3 3); // Note: better: levels 3 3
            faceType boundary;
            cellZone rotatingZone1;
            faceZone rotatingZone1;
            cellZoneInside inside;
        }
        cylinder2
        {
            level (3 3); // Note: better: levels 3 3
            faceType boundary;
            cellZone rotatingZone2;
            faceZone rotatingZone2;
            cellZoneInside inside;
        }
        fans{ level (4 4);} // Note: better: levels 3 3
        outlet{ level (0 0);}
        inlet{ level (0 0);}
        walls{ level (0 0);}
    }

    resolveFeatureAngle 30;

    refinementRegions
    {
        // Note: for better mesh quality utilize this refinement region
        // cylinder1{ mode inside; levels ((1E15 3));}
        // cylinder2{ mode inside; levels ((1E15 3));}
        // cylinder3{ mode inside; levels ((1E15 3));}
        // cylinder4{ mode inside; levels ((1E15 3));}
    }

    locationInMesh (0.01 0.01 0.2);
    allowFreeStandingZoneFaces false;
}

snapControls
{
    nSmoothPatch 3;
    tolerance 4.0;
    nSolveIter 300;
    nRelaxIter 5;
    nFeatureSnapIter 10;
    implicitFeatureSnap true;
    explicitFeatureSnap false;
    multiRegionFeatureSnap true;
}

addLayersControls
{
    relativeSizes true;

    layers
    {
    }

    expansionRatio 1.0;
    finalLayerThickness 0.3;
    minThickness 0.1;
    nGrow 0;
    featureAngle 30;
    nRelaxIter 3;
    nSmoothSurfaceNormals 1;
    nSmoothNormals 3;
    nSmoothThickness 10;
    maxFaceThicknessRatio 0.5;
    maxThicknessToMedialRatio 0.3;
    minMedialAxisAngle 90;
    nBufferCellsNoExtrude 0;
    nLayerIter 50;
}

meshQualityControls
{
    maxNonOrtho 65;
    maxBoundarySkewness 20;
    maxInternalSkewness 4;
    maxConcave 80;
    minVol 1e-13;
    minTetQuality -1;
    minArea -1;
    minTwist 0.01;
    minDeterminant 0.001;
    minFaceWeight 0.05;
    minVolRatio 0.01;
    minTriangleTwist -1;
    nSmoothScale 4;
    errorReduction 0.75;
    relaxed
    {
        maxNonOrtho 75;
    }
}

mergeTolerance 1e-6;


// ************************************************************************* //
